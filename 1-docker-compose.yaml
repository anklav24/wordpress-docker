# Stuff for all apps on a server and maintenance.
version: '2.4'

services:
  zabbix-agent:
    container_name: zabbix-agent
    image: zabbix/zabbix-agent:ubuntu-5.0.16

    cpu_quota: 5000  # 1000 = 1%
    mem_reservation: 16M
    restart: always

    ports:
      - "10050:10050"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./zbx_env/etc/zabbix/zabbix_agentd.d:/etc/zabbix/zabbix_agentd.d:ro
      - ./zbx_env/var/lib/zabbix/modules:/var/lib/zabbix/modules:ro
      - ./zbx_env/var/lib/zabbix/enc:/var/lib/zabbix/enc:ro
      - ./zbx_env/var/lib/zabbix/ssh_keys:/var/lib/zabbix/ssh_keys:ro
    env_file:
      - ./deploy_configs/env_vars/zabbix_agent.env
    privileged: true
    pid: "host"
    stop_grace_period: 5s
    networks:
      zabbix_net:

  traefik:
    container_name: traefik
    image: traefik:v2.5.3

    cpu_quota: 10000  # 1000 = 1%
    mem_reservation: 128M
    restart: always

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik-ssl-certs:/ssl-certs
      - ./deploy_configs/traefik/:/etc/traefik/
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.http.routers.dashboard.rule=Host(`traefik.oracle24.duckdns.org`)
      - traefik.http.routers.dashboard.tls.certresolver=${CASERVER}
      - traefik.http.services.dashboard.loadbalancer.server.port=8080

      - traefik.enable=true
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.entrypoints=http,https
      - traefik.http.routers.dashboard.middlewares=secheaders@file

      - traefik.http.middlewares.traefik-ipwhitelist.ipwhitelist.sourcerange=${IPWHITELIST}

      # Basic Authentication for Traefik Dashboard
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=traefik-auth,traefik-ipwhitelist
      - traefik.http.middlewares.traefik-auth.basicauth.users=${LOGIN}:${PASS_PART_1}${PASS_PART_2}
    healthcheck:
      test: [ "CMD", "wget", "http://localhost:8082/ping","--spider" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    security_opt:
      - no-new-privileges:true
    networks:
      traefik_proxy_net:

  portainer: # optional more functional and creative UI for docker
    container_name: portainer
    image: portainer/portainer-ce:2.9.3-alpine

    cpu_quota: 10000  # 1000 = 1%
    mem_reservation: 128M
    restart: always

    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock  # Connect to docker API
    labels:
      - traefik.http.routers.portainer.rule=Host(`portainer.oracle24.duckdns.org`)
      - traefik.http.routers.portainer.tls.certresolver=${CASERVER}
      - traefik.http.services.portainer.loadbalancer.server.port=9000

      - traefik.http.middlewares.portainer-ipwhitelist.ipwhitelist.sourcerange=${IPWHITELIST}
      - traefik.http.routers.portainer.middlewares=portainer-ipwhitelist

      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=http,https
      - traefik.http.routers.portainer.tls=true
    networks:
      traefik_proxy_net:

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:5.1.1

    cpu_quota: 10000  # 1000 = 1%
    mem_reservation: 128M
    restart: always

    environment:
      PMA_ARBITRARY: 1
    labels:
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.oracle24.duckdns.org`)
      - traefik.http.routers.phpmyadmin.tls.certresolver=${CASERVER}
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80

      - traefik.http.middlewares.phpmyadmin-ipwhitelist.ipwhitelist.sourcerange=${IPWHITELIST}
      - traefik.http.routers.phpmyadmin.middlewares=phpmyadmin-ipwhitelist

      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.entrypoints=http,https
      - traefik.http.routers.phpmyadmin.tls=true
    networks:
      traefik_proxy_net:

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.2

    cpu_quota: 10000  # 1000 = 1%
    mem_reservation: 128M
    restart: always

    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - deploy_configs/env_vars/pgadmin.env
    depends_on:
      - postgres-server
    labels:
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.oracle24.duckdns.org`)
      - traefik.http.routers.pgadmin.tls.certresolver=${CASERVER}
      - traefik.http.services.pgadmin.loadbalancer.server.port=80

      - traefik.http.middlewares.pgadmin-ipwhitelist.ipwhitelist.sourcerange=${IPWHITELIST}
      - traefik.http.routers.pgadmin.middlewares=pgadmin-ipwhitelist

      - traefik.enable=true
      - traefik.http.routers.pgadmin.entrypoints=http,https
      - traefik.http.routers.pgadmin.tls=true
    networks:
      traefik_proxy_net:


networks:
  traefik_proxy_net:
    name: traefik_proxy_net
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.16.190.0/24

  zabbix_net:
    name: zabbix_net
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.16.191.0/24

volumes: # Persistent data
  traefik-ssl-certs:
  portainer_data:
  pgadmin_data:
